image: docker:stable

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  INDEV_IMAGE_NAME: $CI_REGISTRY_IMAGE:trunk-indev

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.before_script_template: &deploy_prep
  except:
    - merge_requests
    - external_pull_requests
  before_script:
    - docker pull $INDEV_IMAGE_NAME
    - SVN_REV="r$(docker run $INDEV_IMAGE_NAME svn info --show-item revision moos-ivp)" && export SVN_REV

build-ivp:
  stage: build
  script:
    # Some of this can be simplified when moving MOOS-IvP to git and when the Dockerfile is embeded in the main moos-ivp
    - docker build -t $INDEV_IMAGE_NAME ./docker/moos-ivp
    - SVN_REV="r$(docker run $INDEV_IMAGE_NAME svn info --show-item revision moos-ivp)" && export SVN_REV && echo "$SVN_REV"
    - docker tag $INDEV_IMAGE_NAME $CI_REGISTRY_IMAGE:${SVN_REV}-indev
    - docker push $INDEV_IMAGE_NAME
    - docker push $CI_REGISTRY_IMAGE:${SVN_REV}-indev

test-build-check:
  stage: test
  script:
    - docker pull $INDEV_IMAGE_NAME
    - docker run $INDEV_IMAGE_NAME moos-ivp/build-check.sh

deploy-gitlab-registry:
  stage: deploy
  <<: *deploy_prep
  script:
    - docker push $INDEV_IMAGE_NAME $CI_REGISTRY_NAME:${SVN_REV}
    - docker push $INDEV_IMAGE_NAME $CI_REGISTRY_NAME:trunk

deploy-docker-hub-registry:
  stage: deploy
  <<: *deploy_prep
  variables:
    DOCKER_HUB_REPO_PATH: docker.io/moosivp/moos-ivp
  script:
    - docker login --user $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PUSH_KEY docker.io
    - docker push $INDEV_IMAGE_NAME ${DOCKER_HUB_REPO_PATH}:${SVN_REV}
    - docker push $INDEV_IMAGE_NAME ${DOCKER_HUB_REPO_PATH}:trunk


# TODO MOOS Unit Tests
